#!/usr/bin/env python2

import os
import sys
import re
import gtk

def esc(s):
	return s.replace('\\', '\\\\').replace('"', '\\"')

def iconpath_for_mime(mime):
	BASE = "/usr/share/rox/ROX/MIME"
	(main, sub) = mime.split('/')
	path = os.path.join(BASE, main+'-'+sub+'.png')
	if not os.path.exists(path):
		path = os.path.join(BASE, main+'-x-generic.png')
	return path

def laxsplit(input, delimiter, output_count):
	return (input.split(delimiter, output_count-1) + [None]*output_count)[:output_count]

opt_fullpath = any(flag in sys.argv for flag in ['-f', '--fullpath-label'])

dirs = {}

while True:
	item = sys.stdin.readline()
	if item == '': break
	
	item = item.rstrip('\n')
	mime_type, filepath, display_name = laxsplit(item, '\t', 3)
	filepath = filepath.rstrip(os.path.sep)
	
	if os.path.exists(filepath):
		if opt_fullpath:
			label = filepath
		else:
			if display_name is not None:
				label = display_name
			else:
				label = os.path.basename(filepath)
		
		iconpath = iconpath_for_mime(mime_type)
		
		# this method seems sparsely supported by applications
		# they register their commands wrong.
		#
		#app = item.last_application()
		#(cmd, _, _) = item.get_application_info(app)
		#command_str = "%s %s" % (cmd, filepath)
		
		cmd = "mimeopen-gui"
		
		print "prog \"%s\" \"%s\" %s \"%s\"" % (esc(label).replace('_', '__'), esc(iconpath), cmd, esc(filepath))
