#!/bin/bash

set -e
set -o pipefail

mountpoint_basedir=$1

if [ ! -d "$mountpoint_basedir" ]
then
	echo "$0: supposed basedir is not a directory: $mountpoint_basedir" >&2
	exit 1
fi

connection_params=$2
connection_params=${connection_params##*/}

remote_root=$3

# connection_params is in form of:
# %r@%n(%h):%p
# relevant ssh config option: ControlPath /home/.../somewhere/%r@%n(%h):%p
# see man ssh_config(5) for details.
#
# example incrontab:
# /home/.../somewhere IN_CREATE autosshfs-mount mnt/ssh $# /
# /home/.../somewhere IN_CREATE autosshfs-mount mnt/rhome $# .

if [[ $connection_params =~ ^([^@]+)@([^\(]+)\(([^\)]+)\):([0-9]+) ]]
then
	user=${BASH_REMATCH[1]}
	host=${BASH_REMATCH[2]}
	hostname=${BASH_REMATCH[3]}
	port=${BASH_REMATCH[4]}
	
	hash=`echo -n "$user$host$hostname$port" | md5sum | cut -c 1-32`
	exec {lockfd}>> /tmp/autosshfs-mount-$hash.lock
	
	if flock --no-fork --exclusive --timeout 10 $lockfd
	then
		mountname="$user@$host($hostname,$port)"
		mountpoint="$mountpoint_basedir/$mountname"
		mkdir -p "$mountpoint"
		ln -snfT "$mountname" "$mountpoint_basedir/$host"
		if ! mountpoint "$mountpoint"
		then
			if [ -e ~/.ssh/autosshfs-extra-options ]; then extra_options=,`cat ~/.ssh/autosshfs-extra-options`; else extra_options=''; fi
			sshfs -o allow_root,auto_unmount,Port=$port,ControlMaster=no,transform_symlinks,Hostname="$hostname"$extra_options "$user@$host:$remote_root" "$mountpoint" {lockfd}>&-
			err=$?
			if [ $err != 0 ]
			then
				echo "$0: sshfs error $err" >&2
			fi
		fi
	else
		echo "$0: can not acquire lock" >&2
		exit 3
	fi
else
	echo "$0: can not parse connection params: $connection_params" >&2
	exit 2
fi
