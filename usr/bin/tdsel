#!/usr/bin/env perl5.18-or-later

use Data::Dumper;
use Getopt::Long;
use Perl::Tokenizer;

do $ENV{'PERL5LIB_ROOT'}."/usr/lib/tdat/common.pl" or die "$@: $!";


GetOptions(
	'F=s' => \$IFS,
) or
die "Usage: $0 [<OPTIONS>] <FILTER>
OPTIONS:
  -F REGEX   input field separator (default: $IFS)
FILTER is a Perl expression with column names replaced by the
field's value row-by-row. A given row is output when the FILTER
expression evaluates to true.
";


my $header = <STDIN>;
print $header;
chomp $header;
my @COLUMNS = parse_column_headers($header);
undef $header;


# take arguments as perl expression and transform bare words to variables referring to the input fields
my $filter_expr = join ' ', @ARGV;
my $FILTER_CODE = transform_to_perl_expression('FIELD', $filter_expr);
undef $filter_expr;
if($ENV{'TDSEL_DEBUG'}) { warn "filter code: $FILTER_CODE\n"; }


$\ = "\n";

# filter input
while(<STDIN>)
{
	chomp;
	my %FIELD = parse_record($_, @COLUMNS);
	
	my $match = eval $FILTER_CODE;
	die $@ if $@;
	
	if($match)
	{
		print;
	}
}
