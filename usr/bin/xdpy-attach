#!/bin/bash

# source up this script to setup new DISPLAY 
# environent in the current session

_xdpy_attach_find_display()
{
	declare -A confirm_xdpy_pid
	
	local signal
	for signal in INT QUIT TERM
	do
		trap "kill -SIG$signal -- \${!confirm_xdpy_pid[@]} 2>/dev/null" $signal
	done
	trap "kill -SIGINT -- \${!confirm_xdpy_pid[@]} 2>/dev/null" EXIT
	
	for dpy in `xdpys`
	do
		echo "Found Display - $dpy" >&2
		DISPLAY=$dpy zenity --question --text="Is this the right Display?\n$dpy" </dev/null >/dev/null 2>&1 &
		confirm_xdpy_pid[$!]=$dpy
	done
	unset dpy
	
	local check_pid
	echo "Waiting for user to response ..." >&2
	
	while [ ${#confirm_xdpy_pid[@]} -gt 0 ]
	do
		for check_pid in "${!confirm_xdpy_pid[@]}" 
		do
			if ! kill -0 "$check_pid" 2>/dev/null
			then
				local dpy=${confirm_xdpy_pid[$check_pid]}
				unset confirm_xdpy_pid[$check_pid]
				
				wait $check_pid
				if [ $? = 0 ]
				then
					echo "$dpy"
					break 2
				fi
			fi
		done
		# Ctrl-C is most likely got by sleep, if so, exit from the loop.
		sleep 0.4 || break
	done
	unset check_pid
	
	kill -SIGINT -- ${!confirm_xdpy_pid[@]} 2>/dev/null
	unset confirm_xdpy_pid
}

_xdpy_attach_apply()
{
	if _xdpy_attach_is_shell_source
	then
		export $1=$2
	else
		echo export $1=$2
	fi
}

_xdpy_attach_is_shell_source()
{
	[ "$0" != "$BASH_SOURCE" ]
}

_xdpy_attach_screen_setenv()
{
	if [ -n "$STY" ]
	then
		echo "Setting Gnu/Screen env $1" >&2
		screen -S "$STY" -X setenv "$1" "$2"
	fi
}


echo "current DISPLAY=$DISPLAY" >&2
dpy=`_xdpy_attach_find_display`
if [ -n "$dpy" ]
then
	echo "Setting DISPLAY to '$dpy'" >&2
	_xdpy_attach_apply DISPLAY "$dpy"
	
	_xdpy_attach_screen_setenv DISPLAY "$dpy"
	
	dbus=`DISPLAY="$dpy" xprop -root DBUS_SESSION_BUS_ADDRESS | cut -s -f2- -d= | cut -f2 -d'"'`
	dbus=${dbus// /}
	if [ -n "$dbus" ]
	then
		echo "Setting DBUS_SESSION_BUS_ADDRESS to '$dbus'" >&2
		_xdpy_attach_apply DBUS_SESSION_BUS_ADDRESS "$dbus"
		
		_xdpy_attach_screen_setenv DBUS_SESSION_BUS_ADDRESS "$dbus"
	fi
	
	if [ -n "$1" ]
	then
		env DISPLAY="$dpy" ${dbus:+DBUS_SESSION_BUS_ADDRESS="$dbus"} "$@"
	fi
	
	unset dbus
fi
unset dpy
